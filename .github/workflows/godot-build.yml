name: Build Godot Project

on:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  REPO_NAME: DmitriySkiba/Jump-Fight


jobs:
  build-project:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.*'

      - name: Godot Setup
        uses: lihop/godot-setup@v2.1.2
        with:
          version: 4.2.1-stable
          bits: 64
          mono: true
          alias: godot
          export-templates: true
    
      - name: Setufp .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Restore Dependencies
        run: dotnet restore

      - name: Setup Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          version: 4.2.1
          is-mono: true

      - name: Verify Setup
        run: |
          dotnet --version
          godot --version
          mono --version
          tree
          
      - name: Copy Godot Export Templates
        run: |
          sudo mkdir -p /github/home/.local/share/godot/export_templates
          sudo mkdir -p /root/home/.local/share/godot/export_templates
          sudo cp export_presets.cfg /github/home/.local/share/godot/export_templates/
          sudo cp export_presets.cfg /root/home/.local/share/godot/export_templates/
          godot --export-release "windows" ./Fight-Jump.exe

     # - name: Build with Godot Mono Build Action
     #   uses: QuakeEye/godot-mono-build-action@v0.0.2
     #   with:
     #     name: Jump-Fight
     #     preset: windows
     #     debugMode: true
     #     subdirectory: build
          
     # - name: Refactor
     #   run: |
     #     tree
     #     pwd
     #     sudo cp ./build/build/Jump-Fight ./build/build/Jump-Fight.exe
     #     sudo rm ./build/build/Jump-Fight

     # - name: Place to zip
     #   run: |
     #     sudo zip -r Jump-Fight.zip ./build/build/*
     #     tree
          
     # - name: Generate Git Tag
     #   id: generate_tag
     #   run: |
     #      VERSION_PREFIX="v"
     #      VERSION_MAJOR_MINOR="1.0"
     #      VERSION_PATCH="0"
     #      
     #     NEW_TAG="${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.${VERSION_PATCH}"
     #      echo "Generated new tag: $NEW_TAG"
     #      echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

     # - name: Install gh-release action
     #   uses: softprops/action-gh-release@v1
     #   with:
     #     files: ./Jump-Fight.zip
     #     tag_name: v1.0.0
